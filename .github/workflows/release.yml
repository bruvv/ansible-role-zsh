---
name: Deploy Collection

# Trigger the workflow however you prefer
on:
  release:
    types:
      - published

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get the version name from the tags
        run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Injecting a dynamic Collection version
        uses: artis3n/ansible_galaxy_collection@v2
        with:
          api_key: "${{ secrets.GALAXY_API_KEY }}"
          galaxy_version: "${{ env.RELEASE_VERSION }}"
      - name: Build and Deploy Collection
        uses: artis3n/ansible_galaxy_collection@v2
        with:
          api_key: "${{ secrets.GALAXY_API_KEY }}"
          collection_dir: "meta"
# ---
# # This workflow requires a GALAXY_API_KEY secret present in the GitHub
# # repository or organization.
# #
# # See: https://github.com/marketplace/actions/publish-ansible-role-to-galaxy
# # See: https://github.com/ansible/galaxy/issues/46

# name: Release
# 'on':
#   push:
#     tags:
#       - '*'

# defaults:
#   run:
#     working-directory: 'bruvv.zsh_antigen'

# jobs:
#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out the codebase.
#         uses: actions/checkout@v3
#         with:
#           path: 'bruvv.zsh_antigen'

#       - name: Set up Python 3.
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.x'

#       - name: Install Ansible.
#         run: pip3 install ansible-core

#       - name: Trigger a new import on Galaxy.
#         run: >-
#           ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }}
#           $(echo ${{ github.repository }} | cut -d/ -f1) $(echo ${{ github.repository }} | cut -d/ -f2)
